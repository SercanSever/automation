@using Automation.Entities.Concrete;
@model Product
@{
    ViewBag.Title = "UpdateProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("UpdateProduct", "Products", FormMethod.Post))
{
<div class="container-fluid">
    <ol class="breadcrumb shadow">
        <li class="breadcrumb-item lead"><strong>Ürün Güncelle</strong></li>
    </ol>
    @Html.ValidationSummary(false, "", new { @style = "color:red" })
    @Html.HiddenFor(x => x.ProductId)
    <div class="row p-2 shadow ">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.Label("Ürün Adı : ")
                @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control", @placeholder = "Air Jordan.." })
              
            </div>
            <div class="form-group">
                @Html.Label("Kategori : ")
                @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.listItems, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.Label("Marka : ")
                @Html.TextBoxFor(x => x.Brand, new { @class = "form-control", @placeholder = "Nike.." })
            </div>
            <div class="form-group">
                @Html.Label("Fiyat : ")
                @Html.TextBoxFor(x => x.UnitPrice, new { @class = "form-control", @placeholder = "360.." })
            </div>
            <div class="form-group">
                @Html.Label("Stok Miktarı : ")
                @Html.TextBoxFor(x => x.UnitInStock, new { @class = "form-control", @placeholder = "120.." })
            </div>
            <div class="form-group">
                @Html.Label("Resin : ")
                @Html.TextBoxFor(x => x.ProductImage, new { @class = "form-control", @placeholder = "360.." })
            </div>
            <button type="submit" class="btn btn-primary">Güncelle</button>
        </div>
    </div>
</div>
}

