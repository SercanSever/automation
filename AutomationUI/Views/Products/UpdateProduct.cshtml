@using Automation.Entities.Concrete;
@model Product
@{
    ViewBag.Title = "UpdateProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("UpdateProduct", "Products", FormMethod.Post))
{
    <div class="container-fluid p-5">
        @Html.HiddenFor(x => x.ProductId)
        <h2>Kategori Ekle</h2>
        <div class="row p-2 shadow ">
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.Label("Ürün Adı : ")
                    @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control", @placeholder = "Air Jordan.." })
                    <small id="categoryNameValidation" class="form-text text-muted">Ürün adı 50 karakteri geçemez.</small>
                </div>
                <div class="form-group">
                    @Html.Label("Marka : ")
                    @Html.TextBoxFor(x => x.Brand, new { @class = "form-control", @placeholder = "Nike.." })
                </div>
                <div class="form-group">
                    @Html.Label("Fiyat : ")
                    @Html.TextBoxFor(x => x.UnitPrice, new { @class = "form-control", @placeholder = "360.." })
                </div>
                <div class="form-group">
                    @Html.Label("Stok Miktarı : ")
                    @Html.TextBoxFor(x => x.UnitInStock, new { @class = "form-control", @placeholder = "120.." })
                </div>
                <div class="form-group">
                    @Html.Label("Kategori : ")
                </div>
                <div class="form-check mb-2">
                    @Html.CheckBoxFor(x => x.IsActive, new { @class = "form-check-input" })
                    <label class="form-check-label" for="checkIsActive">Aktif / Pasif</label>
                </div>
                <a class=" btn btn-primary" href="/Products/Index">Güncelle</a>
            </div>
        </div>
    </div>
}

